#!/usr/bin/awk -f
# The input is expected to be something generated by g++ -E
# Regular expressions are hard-coded for filter purpose
#  - 1. sys-root folders for customized boost
#  - 1. bld-tools folder for stdlib headers (C++)
#  - 1. I_Interface folder for external dependant libs
BEGIN{
    holdingFile=""
    linesCnt=0
    sumFile="cpp-sumrep.txt"
    detailFile="cpp-details.txt"
}

{
    if ($0 ~ /^[[:space:]]*$/){
        next;
    }
    fname = gensub(/^# *[0-9]+ *\"([^ ]+)\" *[0-9]+.*$/, "\\1", "g", $0)
    if (length(fname) < length($0)){
        if (linesCnt > 0){
            #print "will set " holdingFile "as " linesCnt
            stats[holdingFile] = linesCnt
            tempStats[holdingFile] = templateCnt
        }

        fname = gensub(/\/build.*sys-root.*\/usr/, "usr", "g", fname)
        fname = gensub(/\/build.*bld-tools.*\/include/, "include", "g", fname)
        fname = gensub(/\/build.*(I_Interface)/, "\\1", "g", fname)
        holdingFile = fname

        linesCnt = stats[holdingFile] + 0
        templateCnt = tempStats[holdingFile] + 0
    }else{
        
        if ($0 ~ /template/)
            templateCnt += 1

        linesCnt += 1
    }
}

function categorize(category,fn){
    sumStats[category]["lines"] += stats[fn]
    sumStats[category]["temps"] += tempStats[fn]
}

END{
    stats[holdingFile] = linesCnt
    totalLines = 0
    totalTempls = 0

    printf("%-80s|%6s|%6s\n", "fileName", "lines", "tmpl.") > detailFile
    for (fn in stats){
        printf("%-80s|%6d|%6d\n", fn, stats[fn], tempStats[fn]) >> detailFile
        totalLines += stats[fn]
        totalTempls += tempStats[fn]
    }

    for (fn in stats){
        if (fn ~ /^usr\/include/){
            categorize("sysroot", fn)
            if (fn ~ /\/boost\//)
                categorize(">sysroot-boost", fn)
            else
                categorize(">sysroot-nonboost", fn)
        }else if(fn ~ /^include/){
            categorize("sdk", fn)
            if (fn ~ /\/c\+\+\//)
                categorize(">sdk-stdlib", fn)
            else
                categorize(">sdk-nonstd", fn)
        }else if(fn ~ /I_Interface/){
            categorize("sack", fn)
        }else if(fn ~ /^\//){
            categorize("cpri", fn)
        }else{
            categorize("others", fn)
        }
    }

    printf("%-20s|%14s|%14s\n", "category", "lines", "templates") > sumFile
    print "------------------------------------------------------" >> sumFile
    for (cat in sumStats)
        printf("%-20s|%6d(%%%5.2f)|%6d(%%%5.2f)\n", cat,
            sumStats[cat]["lines"], sumStats[cat]["lines"]/totalLines * 100, 
            sumStats[cat]["temps"], sumStats[cat]["temps"]/totalTempls * 100 \
           ) >> sumFile
    print "------------------------------------------------------" >> sumFile

    printf("done, total lines = %d, total template keywords = %d\n", totalLines, totalTempls)
}
